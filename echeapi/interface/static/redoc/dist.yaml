openapi: 3.1.0
info:
  version: 0.1.0
  title: ECHE API
  termsOfService: https://example.com/terms/
  contact:
    email: api.support@uni-foundation.eu
    url: https://github.com/EuropeanUniversityFoundation/eche-api
  x-logo:
    url: https://uni-foundation.eu/wp-content/uploads/2019/04/EUF-1.png
  description: >
    # Introduction


    This API exposes all Institutions that currently hold the [Erasmus Charter
    for Higher
    Education](https://erasmus-plus.ec.europa.eu/document/higher-education-institutions-holding-an-eche-2021-2027)
    as published by the European Commission.


    All the data fields contained in the original list are made available to
    client applications. Additionally, some processed values are also provided
    to respond to more specific use cases.
tags:
  - name: Institutions
    description: See all _Institutions_ in the ECHE list, with optional filtering.
servers:
  - url: /api/v0.1
    description: Sandbox server (example data)
paths:
  /:
    get:
      tags:
        - Institutions
      summary: GET /
      description: |
        Get all _Institutions_ covered by this provider.
      operationId: getList
      parameters:
        - $ref: '#/components/parameters/QueryParamFields'
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user.
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionCollection'
              example:
                - proposalNumber: '111111111'
                  erasmusCode: AQ TESTING99
                  pic: '999999999'
                  oid: E11111111
                  organisationLegalName: TEST ENTRY
                  street: Main street 1
                  postalCode: null
                  city: Ridley Beach
                  country: Antarctica
                  webpage: https://example.com
                  echeStartDate: '2021-01-01'
                  echeEndDate: '2029-12-31'
                  erasmusCodeNormalized: AQ TESTING99
                  erasmusCodePrefix: AQ
                  erasmusCodeCountryCode: AQ
                  countryCode: AQ
        '400':
          $ref: '#/components/responses/Problem'
  /{key}/{value}:
    get:
      tags:
        - Institutions
      summary: GET /{key}/{value}
      description: |
        Get _Institutions_ where a given **key** has a certain **value**.
      operationId: getFilter
      parameters:
        - $ref: '#/components/parameters/PathParamKey'
        - $ref: '#/components/parameters/PathParamValue'
        - $ref: '#/components/parameters/QueryParamFields'
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user.
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionCollection'
              example:
                - proposalNumber: '111111111'
                  erasmusCode: AQ TESTING99
                  pic: '999999999'
                  oid: E11111111
                  organisationLegalName: TEST ENTRY
                  street: Main street 1
                  postalCode: null
                  city: Ridley Beach
                  country: Antarctica
                  webpage: https://example.com
                  echeStartDate: '2021-01-01'
                  echeEndDate: '2029-12-31'
                  erasmusCodeNormalized: AQ TESTING99
                  erasmusCodePrefix: AQ
                  erasmusCodeCountryCode: AQ
                  countryCode: AQ
        '400':
          $ref: '#/components/responses/Problem'
  /{key}:
    get:
      tags:
        - Institutions
      summary: GET /{key}
      description: |
        Get _Institutions_ where a given **key** has a `null` value.
      operationId: getNull
      parameters:
        - $ref: '#/components/parameters/PathParamKey'
        - $ref: '#/components/parameters/QueryParamFields'
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user.
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionCollection'
              example:
                - proposalNumber: '111111111'
                  erasmusCode: AQ TESTING99
                  pic: '999999999'
                  oid: E11111111
                  organisationLegalName: TEST ENTRY
                  street: Main street 1
                  postalCode: null
                  city: Ridley Beach
                  country: Antarctica
                  webpage: https://example.com
                  echeStartDate: '2021-01-01'
                  echeEndDate: '2029-12-31'
                  erasmusCodeNormalized: AQ TESTING99
                  erasmusCodePrefix: AQ
                  erasmusCodeCountryCode: AQ
                  countryCode: AQ
        '400':
          $ref: '#/components/responses/Problem'
components:
  parameters:
    QueryParamFields:
      in: query
      name: fields
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - proposalNumber
            - erasmusCode
            - pic
            - oid
            - organisationLegalName
            - street
            - postalCode
            - city
            - country
            - webpage
            - echeStartDate
            - echeEndDate
            - erasmusCodeNormalized
            - erasmusCodePrefix
            - erasmusCodeCountryCode
            - countryCode
      description: |
        The fields to include in the response.
         If not specified, all fields will be included in the response.
    PathParamKey:
      in: path
      name: key
      schema:
        type: string
        enum:
          - proposalNumber
          - erasmusCode
          - pic
          - oid
          - organisationLegalName
          - street
          - postalCode
          - city
          - country
          - webpage
          - echeStartDate
          - echeEndDate
          - erasmusCodeNormalized
          - erasmusCodePrefix
          - erasmusCodeCountryCode
          - countryCode
      description: The field to filter by.
    PathParamValue:
      in: path
      name: value
      schema:
        type: string
      description: The value to filter by.
  schemas:
    InstitutionCollection:
      type: array
      description: List of _Institution_ resources.
      items:
        type: object
        required:
          - proposalNumber
          - erasmusCode
          - pic
          - organisationLegalName
          - street
          - city
          - country
          - echeStartDate
          - echeEndDate
          - countryCode
        properties:
          proposalNumber:
            type: string
            description: Proposal Number
          erasmusCode:
            type: string
            description: Erasmus Code
          pic:
            type: string
            description: PIC
            pattern: ^\d{9}$
          oid:
            type: string
            description: OID
            pattern: ^E\d{8}$
          organisationLegalName:
            type: string
            description: Organisation Legal Name
          street:
            type: string
            description: Street
          postalCode:
            type: string
            description: Postal Code
          city:
            type: string
            description: City
          country:
            type: string
            description: Country
          webpage:
            type: string
            description: Webpage
          echeStartDate:
            type: string
            description: ECHE Start Date
            format: date
          echeEndDate:
            type: string
            description: ECHE End Date
            format: date
          erasmusCodeNormalized:
            type: string
            description: Normalized Erasmus Code
            pattern: ^([A-Z]{3}|[A-Z]{2}[ ]{1}|[A-Z]{1}[ ]{2})[A-Z][A-Z-]+[A-Z]\d{2,3}$
          erasmusCodePrefix:
            type: string
            description: Erasmus Code prefix
            pattern: ^[A-Z]{1,3}$
          erasmusCodeCountryCode:
            type: string
            description: Country code from Erasmus Code prefix
            pattern: ^[A-Z]{2}$
          countryCode:
            type: string
            description: Country code from Country
            pattern: ^[A-Z]{2}$
    Problem:
      type: object
      additionalProperties: true
      minProperties: 1
      description: >-
        The Problem Details JSON Object
        [[RFC7807](https://tools.ietf.org/html/rfc7807)].
      properties:
        type:
          type: string
          description: >-
            A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)]
            that identifies the problem type. It should provide human-readable
            documentation for the problem type. When this member is not present,
            its value is assumed to be "about:blank".
          format: uri
        title:
          type: string
          description: >-
            A short, human-readable summary of the problem type. It SHOULD NOT
            change from occurrence to occurrence of the problem, except for
            purposes of localization.
        status:
          type: integer
          description: The HTTP status code.
          minimum: 400
          maximum: 599
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.  It may or may not yield further information if
            dereferenced.
  responses:
    Problem:
      description: Problem
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
